{
    "componentChunkName": "component---src-templates-writeups-js",
    "path": "/ctf/writeups/digits/README/",
    "result": {"data":{"site":{"siteMetadata":{"title":"SecHack365-Fans HomePage"}},"markdownRemark":{"id":"e91fb990-46a7-5c80-bd9b-dd719a0579db","excerpt":"digits コンピュータは高速に正しく計算してくれますが、昔のコンピュータは今ほど正確に計算できないことがありました。現在もハードウェアの故障などが原因でとても低い確率でコンピュータは計算をミスするでしょう。\n運が良いあなたならこの問題が解けるはずです。1…","html":"<h1>digits</h1>\n<blockquote>\n<p>コンピュータは高速に正しく計算してくれますが、昔のコンピュータは今ほど正確に計算できないことがありました。現在もハードウェアの故障などが原因でとても低い確率でコンピュータは計算をミスするでしょう。\n運が良いあなたならこの問題が解けるはずです。10 桁の好きな数字をクエリパラメータ <code class=\"language-text\">q</code> に入れて、神に祈りましょう。\n<code class=\"language-text\">https://tsukuctf.sechack365.com/problems/digits</code>\n※この問題では<code class=\"language-text\">/problems/digits</code>以下のみを用います。\n他の問題<code class=\"language-text\">/problems/&lt;name></code>などと混同しないよう注意してください。</p>\n</blockquote>\n<p>プログラムはこれです．</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Optional\n<span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\n<span class=\"token keyword\">import</span> random\n\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nFLAG <span class=\"token operator\">=</span> <span class=\"token string\">\"TsukuCTF{}\"</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/program/digits/\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> q <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"please input param 'q' (0000000000~9999999999).  example: /?q=1234567890\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"invalid query\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">\"-\"</span> <span class=\"token keyword\">in</span> q <span class=\"token keyword\">or</span> <span class=\"token string\">\"+\"</span> <span class=\"token keyword\">in</span> q<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"invalid query\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"invalid query\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"invalid query\"</span><span class=\"token punctuation\">}</span>\n\n    you_are_lucky <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        idx <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span>\n            you_are_lucky <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token string\">\"9\"</span><span class=\"token punctuation\">:</span>\n            you_are_lucky <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">if</span> you_are_lucky <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">:</span> FLAG<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sorry... You're unlucky.\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>ちなみにFastAPIが使われているのは僕の好みです．\n入力<code class=\"language-text\">q</code>のチェックを一つずつ確認しましょう．</p>\n<h3>1. <code class=\"language-text\">q</code>は<code class=\"language-text\">None</code>であってはならない</h3>\n<p>何か入れましょう．</p>\n<h3>2. <code class=\"language-text\">q</code>は文字列型である</h3>\n<p><code class=\"language-text\">def main(q: Optional[str] = None):</code> と書かれています．</p>\n<h3>3. <code class=\"language-text\">q</code>の長さは 10 であ</h3>\n<p><code class=\"language-text\">len(q) != 10:</code> と書かれています．</p>\n<h3>4. <code class=\"language-text\">q</code>に<code class=\"language-text\">+</code>や<code class=\"language-text\">-</code>が含まれない</h3>\n<p>書いてある通りです．</p>\n<h3>5. <code class=\"language-text\">q</code>のある文字が 0 未満または 9 以上になることがある</h3>\n<p>つまり，0~9 以外の文字を 1 つでもこの時点で入って入れば良いです．</p>\n<h3>まとめ</h3>\n<p>結論から言うと，<code class=\"language-text\">+100000000</code>や<code class=\"language-text\">+++1111111</code>や<code class=\"language-text\">+294287356</code>など，<code class=\"language-text\">+</code>が 1 つ以上かつその後ろに数字が 1 つ以上入っていれば何でも大丈夫です．<br>\nURL には<code class=\"language-text\">+</code>という文字を入れることができます．これはデリミタの一種で，半角スペースの扱いになります．<br>\n正解の文字列は長さが 10 で<code class=\"language-text\">-</code>が含まれておらず，<code class=\"language-text\">+</code>は半角スペースに変換されるので<code class=\"language-text\">+</code>も入っておらず，<code class=\"language-text\">int</code>関数で変換可能であり，ある文字が 0 未満または 9 以上になることがあります．</p>\n<h3>お詫び</h3>\n<p>この問題いっぱいミスをしましたすみませんでした．<br>\nまず最初はファイルを与えておらず，ブラックボックスになっていました．<br>\nまた，最初は<code class=\"language-text\">@app.get(\"/program/digits/\")</code>が<code class=\"language-text\">@app.get(\"/program/digits\")</code>となっていて，<code class=\"language-text\">/program/digits/?q=12345678090</code>とアクセスするとlocalhostへリダイレクトされるバグがありました．Yちゃんが気づいて直してくれました．本当にすみませんでした…<br>\nあと<code class=\"language-text\">idx = random.randrange(4)</code>がなんで<code class=\"language-text\">idx = random.randrange(10)</code>ではないかというと，僕のミスです(あまり難易度は変わらないので無視しました)．</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">TsukuCTF{you_are_lucky_Tsukushi}</code></pre></div>","frontmatter":{"title":"digits","description":"コンピュータに祈って運よくフラグをもらうってやつ","author":"ryusei_ishika","genre":"Web","solver":"63","point":"100"}}},"pageContext":{"id":"e91fb990-46a7-5c80-bd9b-dd719a0579db"}},
    "staticQueryHashes": ["2841359383"]}