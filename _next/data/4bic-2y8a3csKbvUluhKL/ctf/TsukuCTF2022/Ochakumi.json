{"pageProps":{"postData":{"id":"Ochakumi","contentHtml":"# Ochakumi\n\n問題文に記載されたリンクは onion ドメインになっています。よって Tor ブラウザなど特定のブラウザを使ってアクセスする必要があります(onion.ws などを使用する方法もあります)。\n\n実際にアクセスしてみると、このような画面になっています。\n\n![](imgs/loading.png)\n\nこの Web サイトは計算機として遊ぶことができます。しかし、len などの特殊な関数も使用できるようです。\n\n![](imgs/calc.png)\n\n次はエラーを出させてみます。このように入力すると、Go 言語のエラー文が出力されます。他にもいくつかのエラーを出力させてみると良いでしょう。\n\n![](imgs/go.png)\n\n次に、ネットワークタブを開いてみます。すると、WASM として Go が実行されていることがわかります。\n\n![](imgs/network.png)\n\n***\n\nWASM をダウンロードして調査します。\n\ntsuku22qotvyqz5kbygsmxvijjg7jg2d7rgc42qhaqt3ryj66lntrmid.onion/main.wasm\n\nところで、Go はパッケージが外部に公開されている場合、go.mod ファイルにレポジトリ情報が高確率で存在します(ただし、Go Modules の規約としては必ずしもここを URL にする必要はありません)。\n\n> Typically, a module path consists of a repository root path, a directory within the repository (usually empty), and a major version suffix (only for major version 2 or higher).[\\[ref\\]](https://go.dev/ref/mod#go-mod-file-ident)\n\nまた、Go で Wasm を作成した場合、go.mod の modules の値がそのまま WASM の中に反映されます。その結果、modules をレポジトリにしている場合はレポジトリ名が判明します。\n\n実際に WASM の中を見てみると、github のレポジトリのようなものがあります。`strings main.wasm | grep \"github\"`などでも確認することができます。\n\n![](imgs/wasm.png)\n\n<https://github.com/GaOACafa/website/>\n\nこのレポジトリを調査すると、興味深いパスが見えます。\n\n![](imgs/gitignore.png)\n\n```txt\npublic/this_is_flag_dbKIMLQnMCI2fp0.html\n```\n\nこのレポジトリは Vite で作成されているので、先頭の public は削除して、以下のリンク先にアクセスします。\n\n```txt\ntsuku22qotvyqz5kbygsmxvijjg7jg2d7rgc42qhaqt3ryj66lntrmid.onion/this_is_flag_dbKIMLQnMCI2fp0.html\n```\n\n![](imgs/flag.png)\n\n## `TsukuCTF22{C0uld_w45m_h4v6_p6r50n4l_1nf0rm4710n?}`\n\n余談: 最初は Vite でもう少しリッチな感じで作ろうと思っていたのですが、間に合いませんでした 🙇‍♂️\n","title":"Ochakumi","description":"WASMから個人を特定する問題","author":"ryusei_ishika","genre":"OSINT","solver":3,"point":500}},"__N_SSG":true}