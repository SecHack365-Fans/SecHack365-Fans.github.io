{"pageProps":{"postData":{"id":"gyOTAKU","contentHtml":"# gyOTAKU\n\nアクセスすると、以下のような魚拓をとれるサービスなようだ。\\\n🐟gyOTAKU🐟\n\n![images/image1.png](./images/image1.png)\n\n魚拓をとると画像が降ってくる。\\\n`https://tsukuctf.sechack365.com/problems/gyotaku?url=http://example.com/`\n\n![images/image2.png](./images/image2.png)\\\nソースを見ると次のようであった。\n\n```python\n~~~\ndef sanitize(text):\n    #RCE is a non-assumed solution. <- This is not a hint.\n    url = \"\"\n    for i in text:\n        if i in string.digits + string.ascii_lowercase + string.ascii_uppercase + \"./_:\":\n            url += i\n    if (url[0:7]!=\"http://\") and (url[0:8]!=\"https://\"):\n        url = \"https://www.google.com\"\n    return url\n~~~\n@app.route(\"/\")\ndef gyotaku():\n    filename = \"\".join([random.choice(string.digits + string.ascii_lowercase + string.ascii_uppercase) for i in range(15)])\n    url = request.args.get(\"url\")\n    if not url:\n        return \"<font size=6>🐟gyOTAKU🐟</font><br><br>You can get gyotaku: <strong>?url={URL}</strong><br>Sorry, we do not yet support other files in the acquired site.\"\n    url = sanitize(url)\n    html = open(f\"{filename}.html\", \"w\")\n    try:\n        html.write(requests.get(url, timeout=1).text + \"<br><font size=7>gyotakued by gyOTAKU</font>\")\n    except:\n        html.write(\"Requests error<br><font size=7>gyotakued by gyOTAKU</font>\")\n    html.close()\n    cmd = f\"chromium-browser --no-sandbox --headless --disable-gpu --screenshot='./gyotaku-{filename}.png' --window-size=1280,1080 '{filename}.html'\"\n    subprocess.run(cmd, shell=True, timeout=1)\n~~~\n```\n\nクエリパラメータで渡されたアドレスを get し、html に保存した後に chromium-browser でスクリーンショットを撮っているようだ。\\\nアドレスは`http://`か`https://`で始まるようサニタイズされている。\\\nファイル名もランダムなので OS コマンドインジェクションも難しそうだ。\\\nここで`alert(1)`を出すようなサイトを読み込むと Internal Server Error が発生することに気づく。\\\nJavaScript が動くようだ。\\\nここで、次のような html を考える。\n\n```html\n<script>\n  location.href = \"/etc/passwd\";\n</script>\n```\n\nこれが`http://tsukuctf.example.com/index.html`として配置されていた場合、`http://tsukuctf.example.com/etc/passwd`へリダイレクトされる。\\\nしかし、html ファイルとしてローカルに保存されている場合、`/etc/passwd`が表示される。\\\nこの html を外部のサーバに配置し魚拓をとると、本アプリによって html ファイルとして保存され、chromium-browser が問題サーバ内の`/etc/passwd`を表示する。\\\nこれで問題サーバ内の任意のファイルが読み出せるようになった。\\\n問題文より root で動いているとのことなので、`/root`以下を捜索する。\\\n`/root/.bash_history`を読み取ると次のようであった。\\\n![images/image3.png](./images/image3.png)\\\n何かが`/root/flagc464f9eba1.txt`に書かれているようだ。\\\n![images/image4.png](./images/image4.png)\\\nファイルを読み込むと flag が書かれていた。\n\n## TsukuCTF{Tsukushi\\_to\\_Sugina\\_no\\_chigai\\_ga\\_wakaran}\n","title":"gyOTAKU","description":"魚拓をとるサービスで任意ファイル読み込み","author":"satoki00","genre":"Web","solver":4,"point":496}},"__N_SSG":true}