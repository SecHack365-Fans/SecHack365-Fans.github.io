{"pageProps":{"postData":{"id":"genesis","contentHtml":"# genesis\n\nTsukushi くんは TsukuCTF の開催記念に新しく暗号資産「TsukuCTFCoin」を作りました！(この資産は問題用に作成されたものであり、実用できるものではありません)\nどうやら Tsukushi くんはブロックチェーンに、フラグ形式の記念のメッセージを埋め込んだようです。\n以下にブロックチェーンエクスプローラーの URL を示します。\nそこから得られる情報を用いて、フラグを取得してください。\n\nこの問題では、提供されるブロックチェーンエクスプローラー以外にバイナリをテキスト(ascii)に変換する手段が必要です。\n\n*   ヒント 1: ブロックチェーンについて詳しくない場合、問題に含まれる単語で検索してみるとヒントを得られるかもしれません。\n*   ヒント 2: ブロックチェーンに含まれるブロックは、ブロックハッシュ(Block Hash)をキー、ブロックの内容をバリューとするキーバリューストアのように考えてください。\n*   ヒント 3: メッセージはトランザクション(tx)に埋め込まれています。\n\nhttps://tsukuctfcoin.sechack365.com\n\n## 想定解法 1\n\nヒント 1 が遠回しですが、「ブロックチェーン メッセージ」で Google 検索をすると、その他の候補として「ビットコイン ジェネシスブロック メッセージ」というものが出てきます。\nこのワードで検索すると、例えば以下のサイトが検索結果として得られます。\nhttps://alis.to/nonbiritokei/articles/3GqMZgbQ0wMz\n\n上記のサイトにはジェネシスブロックは「block0」であることが記されています。\nまた、ジェネシスブロックにはメッセージが埋め込めることがわかります。\n\n以上のように、何かしらの方法でジェネシスブロック(block 0)にメッセージが埋め込まれていることさえわかれば、あとはジェネシスブロックを探し出し、その中からメッセージを探し出すだけです。\n\nWeb サイト上からジェネシスブロックを探したいところですが、トップページで見られるブロックの一覧を見ても、1 ブロックが限界です。\n\n![explorer\\_block1](images/explorer_block1.png)\n\nそこで、ブロックチェーンエクスプローラーが提供してくれている API を用います。\n![api\\_header](images/api_header.png)\n![explorer\\_api](images/explorer_api.png)\n\nヒント 2 には、「ブロックハッシュを元にブロックが求められる」ことが書かれています。\nなので、「block0」のブロックハッシュを求めます。\nAPI 一覧からブロックハッシュを求めるものを探すと「getblockhash」が該当します。\n`index`にブロックの高さを指定すればよいことが書かれているので、 https://tsukuctfcoin.sechack365.com/api/getblockhash?index=0 にアクセスすればブロックハッシュが得られます。\n`a57c276878b629f165b8de7a3d19a3e71bb2a532c3da91b6a068030b51a9b26c`\n![txhash](images/txhash.png)\n\n次いでブロックハッシュからブロックを求めるものを探すと、「getblock」が該当します。\n`hash`にブロックハッシュを指定すれば良いことが書かれているので、 https://tsukuctfcoin.sechack365.com/api/getblock?hash=a57c276878b629f165b8de7a3d19a3e71bb2a532c3da91b6a068030b51a9b26c にアクセスすればブロックのデータが得られます。\n\nここで詰まってしまいますが、ヒント 3 として、「トランザクション(tx)に注目すればいい」ということがわかります。\n「getblock」のリザルトには`tx`が含まれています。これを使用します。\n\n![block](images/block.png)\n\nトランザクションを見るための API は「getrawtransaction」です。\n`txid`に`tx`で得られたものを代入します。\nここからは想定解法が 2 つに分かれます。\n\n### 想定解法 1-1 `decrypt=0`を用いる場合\n\n![decrypt](images/decrypt.png)\ngetrawtransaction には、オプションとして`decrypt`という項目があります。\nこれは、トランザクションを分解して、見やすくする機能で、0 で未適用、1 で適用されます。\n`decrypt=0`で得られた結果は、そのまま hex to ascii 変換器に投げれば、どこかにフラグが浮かび上がります。\n\n![rawtx](images/rawtx.png)\n![flag1](images/flag1.png)\n\n### 想定解法 1-2 `decrypt=1`を用いる場合\n\n`decrypt=1`で得られた結果はその中からさらにフラグに該当する部分を探さなければなりません。\nここからは総当たりでもよいでしょう。\n`coinbase`キーのバリューにあたる部分にフラグが含まれています。\n\n![deserialized\\_rawtx](images/deserialized_rawtx.png)\n![flag2](images/flag2.png)\n\n## 想定解法 2\n\nとりあえず API ページを見に行きます。\nご丁寧にも、API のサンプルは全てジェネシスブロックに関連するものにしてあるので(これはたまたま当たるレベルなので、本来は)、ヒント 3 の「トランザクション(tx)に注目すればいい」という点から`getrawtransaction` API をたたきます。\n![decrypt](images/decrypt.png)\nこれ以降は想定解法 1-1 や 1-2 と同じです。\n\n## Flag\n\n`TsukuCTF{2021_09_11_GENESIS_TKC}`\n","title":"genesis","description":"Blockchainのジェネシスブロックからメッセージを取得する","author":"y_chan_dev","genre":"Network","solver":10,"point":464}},"__N_SSG":true}